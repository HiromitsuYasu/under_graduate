import numpy as np
from mpl_toolkits.mplot3d.axes3d import Axes3D
import ALLM_num as ALLM 
import math
import matplotlib.pyplot as plt
import matplotlib.cm as cm
import matplotlib.animation as animation

E_mu = 1.5
m_N = 0.94
m_pi = 0.14
a = 1.0 / 137.0
GeV_cm = 3.88 * 10**(-26.0)

#parameter dN/dt
rho = 1.0
N_A = 6.0 * 10**23
A = 1.0
Pb = 20 * 20 * 10

cordinate_1 = np.arange(0.001, 0.99, 0.001)
cordinate_2 = np.arange(0.001, 0.99, 0.001)
X, Y = np.meshgrid(cordinate_1, cordinate_2)

def E_mu_prime(y):
    e = E_mu * (1 - y)
    return e

E_gamma = E_mu -  E_mu_prime(cordinate_1)

def W2(Q2):
    w_2 =m_N **2 + 2 * m_N * E_gamma - Q2
    return w_2

def f(Q2,y):
    #W = np.sqrt(W2(Q2))
    Q2_min = m_pi **2 * y**2 / (1 - y)
    x = Q2 / (2 * m_N * E_gamma)
    sigma_µN =  ( (4 * math.pi * a **2) / (y * Q2 **3 * (1 - x) ) ) * (Q2 **2 + 4 * m_N **2 * x **2) * ((1 - y) * (1 - Q2_min / Q2) + y **2 / 2) * ALLM.allm_f2(x, Q2)
    return sigma_µN

Z = f(X,Y)
"""
fig, ax = plt.subplots()
cont_cl = ax.contour(np.log10(X), np.log10(Y), np.log10(Z), 25, colors=['r', 'g', 'b'])
ax.clabel(cont_cl, inline=True, fontsize=8)
plt.xlabel('log10 (Q^2) [Gev^2]', fontsize=14)
plt.ylabel('loh10(y)', fontsize=14)
plt.title('theta')
plt.show()
"""

fig = plt.figure()
ax = Axes3D(fig)

c1, c2 ="blue", "green"
l1, l2 = "all", "non effective"

ax.plot_wireframe(np.log10(X), np.log10(Y), np.log10(Z), color=c1,label=l1)
ax.set_xlabel("log10(Q^2) [Gev^2]")
ax.set_ylabel("log10(y)")
ax.set_zlabel("log10(sigma_dif) [GeV^2]")
ax.grid()

cordinate1_wall = np.linspace(0.001, 1.0, 989)
cordinate2_wall = np.linspace(0.0519, 0.227, 989)

x_wall , y_wall = np.meshgrid(cordinate1_wall ,cordinate2_wall)        
Z_wall = f(x_wall, y_wall)
ax.plot_wireframe(np.log10(x_wall), np.log10(y_wall), np.log10(Z_wall),color=c2, label=l2 )
ax.legend(loc=0)
plt.show()

